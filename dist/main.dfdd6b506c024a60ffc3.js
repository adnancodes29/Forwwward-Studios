/*! For license information please see main.dfdd6b506c024a60ffc3.js.LICENSE.txt */
(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var i=n.getElementsByTagName("script");if(i.length)for(var r=i.length-1;r>-1&&!t;)t=i[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=function(){function e(t,n,i){let r=25*n/i;r<n&&(t.scrollTop+=r,setTimeout((function(){e(t,n-r,i)}),25))}document.addEventListener("wheel",(function(t){t.deltaY>0&&e(document.documentElement,100,1e3)}))};function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function s(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}function o(e){return o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},o(e)}function a(e,t){return a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},a(e,t)}function c(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=o(e);if(t){var r=o(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return c(this,n)}}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=o(e)););return e}(e,t);if(i){var r=Object.getOwnPropertyDescriptor(i,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},d.apply(this,arguments)}var u={type:"slider",startAt:0,perView:1,focusAt:0,gap:10,autoplay:!1,hoverpause:!0,keyboard:!0,bound:!1,swipeThreshold:80,dragThreshold:120,perSwipe:"",touchRatio:.5,touchAngle:45,animationDuration:400,rewind:!0,rewindDuration:800,animationTimingFunc:"cubic-bezier(.165, .840, .440, 1)",waitForTransition:!0,throttle:10,direction:"ltr",peek:0,cloningRatio:1,breakpoints:{},classes:{swipeable:"glide--swipeable",dragging:"glide--dragging",direction:{ltr:"glide--ltr",rtl:"glide--rtl"},type:{slider:"glide--slider",carousel:"glide--carousel"},slide:{clone:"glide__slide--clone",active:"glide__slide--active"},arrow:{disabled:"glide__arrow--disabled"},nav:{active:"glide__bullet--active"}}};function f(e){console.error("[Glide warn]: ".concat(e))}function h(e){return parseInt(e)}function g(e){return"string"==typeof e}function m(e){var t=n(e);return"function"===t||"object"===t&&!!e}function v(e){return"function"==typeof e}function p(e){return void 0===e}function w(e){return e.constructor===Array}function y(e,t,n){Object.defineProperty(e,t,n)}function _(e,t){var n=Object.assign({},e,t);return t.hasOwnProperty("classes")&&(n.classes=Object.assign({},e.classes,t.classes),t.classes.hasOwnProperty("direction")&&(n.classes.direction=Object.assign({},e.classes.direction,t.classes.direction)),t.classes.hasOwnProperty("type")&&(n.classes.type=Object.assign({},e.classes.type,t.classes.type)),t.classes.hasOwnProperty("slide")&&(n.classes.slide=Object.assign({},e.classes.slide,t.classes.slide)),t.classes.hasOwnProperty("arrow")&&(n.classes.arrow=Object.assign({},e.classes.arrow,t.classes.arrow)),t.classes.hasOwnProperty("nav")&&(n.classes.nav=Object.assign({},e.classes.nav,t.classes.nav))),t.hasOwnProperty("breakpoints")&&(n.breakpoints=Object.assign({},e.breakpoints,t.breakpoints)),n}var b=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,e),this.events=t,this.hop=t.hasOwnProperty}return s(e,[{key:"on",value:function(e,t){if(!w(e)){this.hop.call(this.events,e)||(this.events[e]=[]);var n=this.events[e].push(t)-1;return{remove:function(){delete this.events[e][n]}}}for(var i=0;i<e.length;i++)this.on(e[i],t)}},{key:"emit",value:function(e,t){if(w(e))for(var n=0;n<e.length;n++)this.emit(e[n],t);else this.hop.call(this.events,e)&&this.events[e].forEach((function(e){e(t||{})}))}}]),e}(),S=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};i(this,e),this._c={},this._t=[],this._e=new b,this.disabled=!1,this.selector=t,this.settings=_(u,n),this.index=this.settings.startAt}return s(e,[{key:"mount",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this._e.emit("mount.before"),m(e)?this._c=function(e,t,n){var i={};for(var r in t)v(t[r])?i[r]=t[r](e,i,n):f("Extension must be a function");for(var s in i)v(i[s].mount)&&i[s].mount();return i}(this,e,this._e):f("You need to provide a object on `mount()`"),this._e.emit("mount.after"),this}},{key:"mutate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return w(e)?this._t=e:f("You need to provide a array on `mutate()`"),this}},{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.settings=_(this.settings,e),e.hasOwnProperty("startAt")&&(this.index=e.startAt),this._e.emit("update"),this}},{key:"go",value:function(e){return this._c.Run.make(e),this}},{key:"move",value:function(e){return this._c.Transition.disable(),this._c.Move.make(e),this}},{key:"destroy",value:function(){return this._e.emit("destroy"),this}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return e&&(this.settings.autoplay=e),this._e.emit("play"),this}},{key:"pause",value:function(){return this._e.emit("pause"),this}},{key:"disable",value:function(){return this.disabled=!0,this}},{key:"enable",value:function(){return this.disabled=!1,this}},{key:"on",value:function(e,t){return this._e.on(e,t),this}},{key:"isType",value:function(e){return this.settings.type===e}},{key:"settings",get:function(){return this._o},set:function(e){m(e)?this._o=e:f("Options must be an `object` instance.")}},{key:"index",get:function(){return this._i},set:function(e){this._i=h(e)}},{key:"type",get:function(){return this.settings.type}},{key:"disabled",get:function(){return this._d},set:function(e){this._d=!!e}}]),e}();function k(){return(new Date).getTime()}function x(e,t,n){var i,r,s,o,a=0;n||(n={});var c=function(){a=!1===n.leading?0:k(),i=null,o=e.apply(r,s),i||(r=s=null)},l=function(){var l=k();a||!1!==n.leading||(a=l);var d=t-(l-a);return r=this,s=arguments,d<=0||d>t?(i&&(clearTimeout(i),i=null),a=l,o=e.apply(r,s),i||(r=s=null)):i||!1===n.trailing||(i=setTimeout(c,d)),o};return l.cancel=function(){clearTimeout(i),a=0,i=r=s=null},l}var H={ltr:["marginLeft","marginRight"],rtl:["marginRight","marginLeft"]};function q(e){if(e&&e.parentNode){for(var t=e.parentNode.firstChild,n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n}return[]}function z(e){return!!(e&&e instanceof window.HTMLElement)}function M(e){return Array.prototype.slice.call(e)}var L='[data-glide-el="track"]';var C=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,e),this.listeners=t}return s(e,[{key:"on",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];g(e)&&(e=[e]);for(var r=0;r<e.length;r++)this.listeners[e[r]]=n,t.addEventListener(e[r],this.listeners[e[r]],i)}},{key:"off",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];g(e)&&(e=[e]);for(var i=0;i<e.length;i++)t.removeEventListener(e[i],this.listeners[e[i]],n)}},{key:"destroy",value:function(){delete this.listeners}}]),e}();var A=["ltr","rtl"],T={">":"<","<":">","=":"="};function j(e,t){return{modify:function(e){return t.Direction.is("rtl")?-e:e}}}function E(e,t){return{modify:function(e){var n=Math.floor(e/t.Sizes.slideWidth);return e+t.Gaps.value*n}}}function O(e,t){return{modify:function(e){return e+t.Clones.grow/2}}}function B(e,t){return{modify:function(n){if(e.settings.focusAt>=0){var i=t.Peek.value;return m(i)?n-i.before:n-i}return n}}}function P(e,t){return{modify:function(n){var i=t.Gaps.value,r=t.Sizes.width,s=e.settings.focusAt,o=t.Sizes.slideWidth;return"center"===s?n-(r/2-o/2):n-o*s-i*s}}}var D=!1;try{var R=Object.defineProperty({},"passive",{get:function(){D=!0}});window.addEventListener("testPassive",null,R),window.removeEventListener("testPassive",null,R)}catch(e){}var V=D,W=["touchstart","mousedown"],F=["touchmove","mousemove"],I=["touchend","touchcancel","mouseup","mouseleave"],Y=["mousedown","mousemove","mouseup","mouseleave"];var G='[data-glide-el^="controls"]',U="".concat(G,' [data-glide-dir*="<"]'),X="".concat(G,' [data-glide-dir*=">"]');function N(e){return m(e)?(t=e,Object.keys(t).sort().reduce((function(e,n){return e[n]=t[n],e[n],e}),{})):(f("Breakpoints option must be an object"),{});var t}var $={Html:function(e,t,n){var i={mount:function(){this.root=e.selector,this.track=this.root.querySelector(L),this.collectSlides()},collectSlides:function(){this.slides=M(this.wrapper.children).filter((function(t){return!t.classList.contains(e.settings.classes.slide.clone)}))}};return y(i,"root",{get:function(){return i._r},set:function(e){g(e)&&(e=document.querySelector(e)),z(e)?i._r=e:f("Root element must be a existing Html node")}}),y(i,"track",{get:function(){return i._t},set:function(e){z(e)?i._t=e:f("Could not find track element. Please use ".concat(L," attribute."))}}),y(i,"wrapper",{get:function(){return i.track.children[0]}}),n.on("update",(function(){i.collectSlides()})),i},Translate:function(e,t,n){var i={set:function(n){var i=function(e,t,n){var i=[E,O,B,P].concat(e._t,[j]);return{mutate:function(r){for(var s=0;s<i.length;s++){var o=i[s];v(o)&&v(o().modify)?r=o(e,t,n).modify(r):f("Transformer should be a function that returns an object with `modify()` method")}return r}}}(e,t).mutate(n),r="translate3d(".concat(-1*i,"px, 0px, 0px)");t.Html.wrapper.style.mozTransform=r,t.Html.wrapper.style.webkitTransform=r,t.Html.wrapper.style.transform=r},remove:function(){t.Html.wrapper.style.transform=""},getStartIndex:function(){var n=t.Sizes.length,i=e.index,r=e.settings.perView;return t.Run.isOffset(">")||t.Run.isOffset("|>")?n+(i-r):(i+r)%n},getTravelDistance:function(){var n=t.Sizes.slideWidth*e.settings.perView;return t.Run.isOffset(">")||t.Run.isOffset("|>")?-1*n:n}};return n.on("move",(function(r){if(!e.isType("carousel")||!t.Run.isOffset())return i.set(r.movement);t.Transition.after((function(){n.emit("translate.jump"),i.set(t.Sizes.slideWidth*e.index)}));var s=t.Sizes.slideWidth*t.Translate.getStartIndex();return i.set(s-t.Translate.getTravelDistance())})),n.on("destroy",(function(){i.remove()})),i},Transition:function(e,t,n){var i=!1,r={compose:function(t){var n=e.settings;return i?"".concat(t," 0ms ").concat(n.animationTimingFunc):"".concat(t," ").concat(this.duration,"ms ").concat(n.animationTimingFunc)},set:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"transform";t.Html.wrapper.style.transition=this.compose(e)},remove:function(){t.Html.wrapper.style.transition=""},after:function(e){setTimeout((function(){e()}),this.duration)},enable:function(){i=!1,this.set()},disable:function(){i=!0,this.set()}};return y(r,"duration",{get:function(){var n=e.settings;return e.isType("slider")&&t.Run.offset?n.rewindDuration:n.animationDuration}}),n.on("move",(function(){r.set()})),n.on(["build.before","resize","translate.jump"],(function(){r.disable()})),n.on("run",(function(){r.enable()})),n.on("destroy",(function(){r.remove()})),r},Direction:function(e,t,n){var i={mount:function(){this.value=e.settings.direction},resolve:function(e){var t=e.slice(0,1);return this.is("rtl")?e.split(t).join(T[t]):e},is:function(e){return this.value===e},addClass:function(){t.Html.root.classList.add(e.settings.classes.direction[this.value])},removeClass:function(){t.Html.root.classList.remove(e.settings.classes.direction[this.value])}};return y(i,"value",{get:function(){return i._v},set:function(e){A.indexOf(e)>-1?i._v=e:f("Direction value must be `ltr` or `rtl`")}}),n.on(["destroy","update"],(function(){i.removeClass()})),n.on("update",(function(){i.mount()})),n.on(["build.before","update"],(function(){i.addClass()})),i},Peek:function(e,t,n){var i={mount:function(){this.value=e.settings.peek}};return y(i,"value",{get:function(){return i._v},set:function(e){m(e)?(e.before=h(e.before),e.after=h(e.after)):e=h(e),i._v=e}}),y(i,"reductor",{get:function(){var t=i.value,n=e.settings.perView;return m(t)?t.before/n+t.after/n:2*t/n}}),n.on(["resize","update"],(function(){i.mount()})),i},Sizes:function(e,t,n){var i={setupSlides:function(){for(var e="".concat(this.slideWidth,"px"),n=t.Html.slides,i=0;i<n.length;i++)n[i].style.width=e},setupWrapper:function(){t.Html.wrapper.style.width="".concat(this.wrapperSize,"px")},remove:function(){for(var e=t.Html.slides,n=0;n<e.length;n++)e[n].style.width="";t.Html.wrapper.style.width=""}};return y(i,"length",{get:function(){return t.Html.slides.length}}),y(i,"width",{get:function(){return t.Html.track.offsetWidth}}),y(i,"wrapperSize",{get:function(){return i.slideWidth*i.length+t.Gaps.grow+t.Clones.grow}}),y(i,"slideWidth",{get:function(){return i.width/e.settings.perView-t.Peek.reductor-t.Gaps.reductor}}),n.on(["build.before","resize","update"],(function(){i.setupSlides(),i.setupWrapper()})),n.on("destroy",(function(){i.remove()})),i},Gaps:function(e,t,n){var i={apply:function(e){for(var n=0,i=e.length;n<i;n++){var r=e[n].style,s=t.Direction.value;r[H[s][0]]=0!==n?"".concat(this.value/2,"px"):"",n!==e.length-1?r[H[s][1]]="".concat(this.value/2,"px"):r[H[s][1]]=""}},remove:function(e){for(var t=0,n=e.length;t<n;t++){var i=e[t].style;i.marginLeft="",i.marginRight=""}}};return y(i,"value",{get:function(){return h(e.settings.gap)}}),y(i,"grow",{get:function(){return i.value*t.Sizes.length}}),y(i,"reductor",{get:function(){var t=e.settings.perView;return i.value*(t-1)/t}}),n.on(["build.after","update"],x((function(){i.apply(t.Html.wrapper.children)}),30)),n.on("destroy",(function(){i.remove(t.Html.wrapper.children)})),i},Move:function(e,t,n){var i={mount:function(){this._o=0},make:function(){var e=this,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.offset=i,n.emit("move",{movement:this.value}),t.Transition.after((function(){n.emit("move.after",{movement:e.value})}))}};return y(i,"offset",{get:function(){return i._o},set:function(e){i._o=p(e)?0:h(e)}}),y(i,"translate",{get:function(){return t.Sizes.slideWidth*e.index}}),y(i,"value",{get:function(){var e=this.offset,n=this.translate;return t.Direction.is("rtl")?n+e:n-e}}),n.on(["build.before","run"],(function(){i.make()})),i},Clones:function(e,t,n){var i={mount:function(){this.items=[],e.isType("carousel")&&(this.items=this.collect())},collect:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=t.Html.slides,r=e.settings,s=r.perView,o=r.classes,a=r.cloningRatio;if(0!==i.length)for(var c=s+ +!!e.settings.peek+Math.round(s/2),l=i.slice(0,c).reverse(),d=i.slice(-1*c),u=0;u<Math.max(a,Math.floor(s/i.length));u++){for(var f=0;f<l.length;f++){var h=l[f].cloneNode(!0);h.classList.add(o.slide.clone),n.push(h)}for(var g=0;g<d.length;g++){var m=d[g].cloneNode(!0);m.classList.add(o.slide.clone),n.unshift(m)}}return n},append:function(){for(var e=this.items,n=t.Html,i=n.wrapper,r=n.slides,s=Math.floor(e.length/2),o=e.slice(0,s).reverse(),a=e.slice(-1*s).reverse(),c="".concat(t.Sizes.slideWidth,"px"),l=0;l<a.length;l++)i.appendChild(a[l]);for(var d=0;d<o.length;d++)i.insertBefore(o[d],r[0]);for(var u=0;u<e.length;u++)e[u].style.width=c},remove:function(){for(var e=this.items,n=0;n<e.length;n++)t.Html.wrapper.removeChild(e[n])}};return y(i,"grow",{get:function(){return(t.Sizes.slideWidth+t.Gaps.value)*i.items.length}}),n.on("update",(function(){i.remove(),i.mount(),i.append()})),n.on("build.before",(function(){e.isType("carousel")&&i.append()})),n.on("destroy",(function(){i.remove()})),i},Resize:function(e,t,n){var i=new C,r={mount:function(){this.bind()},bind:function(){i.on("resize",window,x((function(){n.emit("resize")}),e.settings.throttle))},unbind:function(){i.off("resize",window)}};return n.on("destroy",(function(){r.unbind(),i.destroy()})),r},Build:function(e,t,n){var i={mount:function(){n.emit("build.before"),this.typeClass(),this.activeClass(),n.emit("build.after")},typeClass:function(){t.Html.root.classList.add(e.settings.classes.type[e.settings.type])},activeClass:function(){var n=e.settings.classes,i=t.Html.slides[e.index];i&&(i.classList.add(n.slide.active),q(i).forEach((function(e){e.classList.remove(n.slide.active)})))},removeClasses:function(){var n=e.settings.classes,i=n.type,r=n.slide;t.Html.root.classList.remove(i[e.settings.type]),t.Html.slides.forEach((function(e){e.classList.remove(r.active)}))}};return n.on(["destroy","update"],(function(){i.removeClasses()})),n.on(["resize","update"],(function(){i.mount()})),n.on("move.after",(function(){i.activeClass()})),i},Run:function(e,t,n){var i={mount:function(){this._o=!1},make:function(i){var r=this;e.disabled||(!e.settings.waitForTransition||e.disable(),this.move=i,n.emit("run.before",this.move),this.calculate(),n.emit("run",this.move),t.Transition.after((function(){r.isStart()&&n.emit("run.start",r.move),r.isEnd()&&n.emit("run.end",r.move),r.isOffset()&&(r._o=!1,n.emit("run.offset",r.move)),n.emit("run.after",r.move),e.enable()})))},calculate:function(){var t=this.move,n=this.length,r=t.steps,s=t.direction,o=1;if("="===s)return e.settings.bound&&h(r)>n?void(e.index=n):void(e.index=r);if(">"!==s||">"!==r)if("<"!==s||"<"!==r){if("|"===s&&(o=e.settings.perView||1),">"===s||"|"===s&&">"===r){var a=function(t){var n=e.index;if(e.isType("carousel"))return n+t;return n+(t-n%t)}(o);return a>n&&(this._o=!0),void(e.index=function(t,n){var r=i.length;if(t<=r)return t;if(e.isType("carousel"))return t-(r+1);if(e.settings.rewind)return i.isBound()&&!i.isEnd()?r:0;if(i.isBound())return r;return Math.floor(r/n)*n}(a,o))}if("<"===s||"|"===s&&"<"===r){var c=function(t){var n=e.index;if(e.isType("carousel"))return n-t;var i=Math.ceil(n/t);return(i-1)*t}(o);return c<0&&(this._o=!0),void(e.index=function(t,n){var r=i.length;if(t>=0)return t;if(e.isType("carousel"))return t+(r+1);if(e.settings.rewind)return i.isBound()&&i.isStart()?r:Math.floor(r/n)*n;return 0}(c,o))}f("Invalid direction pattern [".concat(s).concat(r,"] has been used"))}else e.index=0;else e.index=n},isStart:function(){return e.index<=0},isEnd:function(){return e.index>=this.length},isOffset:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;return e?!!this._o&&("|>"===e?"|"===this.move.direction&&">"===this.move.steps:"|<"===e?"|"===this.move.direction&&"<"===this.move.steps:this.move.direction===e):this._o},isBound:function(){return e.isType("slider")&&"center"!==e.settings.focusAt&&e.settings.bound}};return y(i,"move",{get:function(){return this._m},set:function(e){var t=e.substr(1);this._m={direction:e.substr(0,1),steps:t?h(t)?h(t):t:0}}}),y(i,"length",{get:function(){var n=e.settings,i=t.Html.slides.length;return this.isBound()?i-1-(h(n.perView)-1)+h(n.focusAt):i-1}}),y(i,"offset",{get:function(){return this._o}}),i},Swipe:function(e,t,n){var i=new C,r=0,s=0,o=0,a=!1,c=!!V&&{passive:!0},l={mount:function(){this.bindSwipeStart()},start:function(t){if(!a&&!e.disabled){this.disable();var i=this.touches(t);r=null,s=h(i.pageX),o=h(i.pageY),this.bindSwipeMove(),this.bindSwipeEnd(),n.emit("swipe.start")}},move:function(i){if(!e.disabled){var a=e.settings,c=a.touchAngle,l=a.touchRatio,d=a.classes,u=this.touches(i),f=h(u.pageX)-s,g=h(u.pageY)-o,m=Math.abs(f<<2),v=Math.abs(g<<2),p=Math.sqrt(m+v),w=Math.sqrt(v);if(!(180*(r=Math.asin(w/p))/Math.PI<c))return!1;i.stopPropagation(),t.Move.make(f*parseFloat(l)),t.Html.root.classList.add(d.dragging),n.emit("swipe.move")}},end:function(i){if(!e.disabled){var o=e.settings,a=o.perSwipe,c=o.touchAngle,l=o.classes,d=this.touches(i),u=this.threshold(i),f=d.pageX-s,h=180*r/Math.PI;this.enable(),f>u&&h<c?t.Run.make(t.Direction.resolve("".concat(a,"<"))):f<-u&&h<c?t.Run.make(t.Direction.resolve("".concat(a,">"))):t.Move.make(),t.Html.root.classList.remove(l.dragging),this.unbindSwipeMove(),this.unbindSwipeEnd(),n.emit("swipe.end")}},bindSwipeStart:function(){var n=this,r=e.settings,s=r.swipeThreshold,o=r.dragThreshold;s&&i.on(W[0],t.Html.wrapper,(function(e){n.start(e)}),c),o&&i.on(W[1],t.Html.wrapper,(function(e){n.start(e)}),c)},unbindSwipeStart:function(){i.off(W[0],t.Html.wrapper,c),i.off(W[1],t.Html.wrapper,c)},bindSwipeMove:function(){var n=this;i.on(F,t.Html.wrapper,x((function(e){n.move(e)}),e.settings.throttle),c)},unbindSwipeMove:function(){i.off(F,t.Html.wrapper,c)},bindSwipeEnd:function(){var e=this;i.on(I,t.Html.wrapper,(function(t){e.end(t)}))},unbindSwipeEnd:function(){i.off(I,t.Html.wrapper)},touches:function(e){return Y.indexOf(e.type)>-1?e:e.touches[0]||e.changedTouches[0]},threshold:function(t){var n=e.settings;return Y.indexOf(t.type)>-1?n.dragThreshold:n.swipeThreshold},enable:function(){return a=!1,t.Transition.enable(),this},disable:function(){return a=!0,t.Transition.disable(),this}};return n.on("build.after",(function(){t.Html.root.classList.add(e.settings.classes.swipeable)})),n.on("destroy",(function(){l.unbindSwipeStart(),l.unbindSwipeMove(),l.unbindSwipeEnd(),i.destroy()})),l},Images:function(e,t,n){var i=new C,r={mount:function(){this.bind()},bind:function(){i.on("dragstart",t.Html.wrapper,this.dragstart)},unbind:function(){i.off("dragstart",t.Html.wrapper)},dragstart:function(e){e.preventDefault()}};return n.on("destroy",(function(){r.unbind(),i.destroy()})),r},Anchors:function(e,t,n){var i=new C,r=!1,s=!1,o={mount:function(){this._a=t.Html.wrapper.querySelectorAll("a"),this.bind()},bind:function(){i.on("click",t.Html.wrapper,this.click)},unbind:function(){i.off("click",t.Html.wrapper)},click:function(e){s&&(e.stopPropagation(),e.preventDefault())},detach:function(){if(s=!0,!r){for(var e=0;e<this.items.length;e++)this.items[e].draggable=!1;r=!0}return this},attach:function(){if(s=!1,r){for(var e=0;e<this.items.length;e++)this.items[e].draggable=!0;r=!1}return this}};return y(o,"items",{get:function(){return o._a}}),n.on("swipe.move",(function(){o.detach()})),n.on("swipe.end",(function(){t.Transition.after((function(){o.attach()}))})),n.on("destroy",(function(){o.attach(),o.unbind(),i.destroy()})),o},Controls:function(e,t,n){var i=new C,r=!!V&&{passive:!0},s={mount:function(){this._n=t.Html.root.querySelectorAll('[data-glide-el="controls[nav]"]'),this._c=t.Html.root.querySelectorAll(G),this._arrowControls={previous:t.Html.root.querySelectorAll(U),next:t.Html.root.querySelectorAll(X)},this.addBindings()},setActive:function(){for(var e=0;e<this._n.length;e++)this.addClass(this._n[e].children)},removeActive:function(){for(var e=0;e<this._n.length;e++)this.removeClass(this._n[e].children)},addClass:function(t){var n=e.settings,i=t[e.index];i&&i&&(i.classList.add(n.classes.nav.active),q(i).forEach((function(e){e.classList.remove(n.classes.nav.active)})))},removeClass:function(t){var n=t[e.index];n&&n.classList.remove(e.settings.classes.nav.active)},setArrowState:function(){if(!e.settings.rewind){var n=s._arrowControls.next,i=s._arrowControls.previous;this.resetArrowState(n,i),0===e.index&&this.disableArrow(i),e.index===t.Run.length&&this.disableArrow(n)}},resetArrowState:function(){for(var t=e.settings,n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];i.forEach((function(e){M(e).forEach((function(e){e.classList.remove(t.classes.arrow.disabled)}))}))},disableArrow:function(){for(var t=e.settings,n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];i.forEach((function(e){M(e).forEach((function(e){e.classList.add(t.classes.arrow.disabled)}))}))},addBindings:function(){for(var e=0;e<this._c.length;e++)this.bind(this._c[e].children)},removeBindings:function(){for(var e=0;e<this._c.length;e++)this.unbind(this._c[e].children)},bind:function(e){for(var t=0;t<e.length;t++)i.on("click",e[t],this.click),i.on("touchstart",e[t],this.click,r)},unbind:function(e){for(var t=0;t<e.length;t++)i.off(["click","touchstart"],e[t])},click:function(e){V||"touchstart"!==e.type||e.preventDefault();var n=e.currentTarget.getAttribute("data-glide-dir");t.Run.make(t.Direction.resolve(n))}};return y(s,"items",{get:function(){return s._c}}),n.on(["mount.after","move.after"],(function(){s.setActive()})),n.on(["mount.after","run"],(function(){s.setArrowState()})),n.on("destroy",(function(){s.removeBindings(),s.removeActive(),i.destroy()})),s},Keyboard:function(e,t,n){var i=new C,r={mount:function(){e.settings.keyboard&&this.bind()},bind:function(){i.on("keyup",document,this.press)},unbind:function(){i.off("keyup",document)},press:function(n){var i=e.settings.perSwipe;"ArrowRight"===n.code&&t.Run.make(t.Direction.resolve("".concat(i,">"))),"ArrowLeft"===n.code&&t.Run.make(t.Direction.resolve("".concat(i,"<")))}};return n.on(["destroy","update"],(function(){r.unbind()})),n.on("update",(function(){r.mount()})),n.on("destroy",(function(){i.destroy()})),r},Autoplay:function(e,t,n){var i=new C,r={mount:function(){this.enable(),this.start(),e.settings.hoverpause&&this.bind()},enable:function(){this._e=!0},disable:function(){this._e=!1},start:function(){var i=this;this._e&&(this.enable(),e.settings.autoplay&&p(this._i)&&(this._i=setInterval((function(){i.stop(),t.Run.make(">"),i.start(),n.emit("autoplay")}),this.time)))},stop:function(){this._i=clearInterval(this._i)},bind:function(){var e=this;i.on("mouseover",t.Html.root,(function(){e._e&&e.stop()})),i.on("mouseout",t.Html.root,(function(){e._e&&e.start()}))},unbind:function(){i.off(["mouseover","mouseout"],t.Html.root)}};return y(r,"time",{get:function(){var n=t.Html.slides[e.index].getAttribute("data-glide-autoplay");return h(n||e.settings.autoplay)}}),n.on(["destroy","update"],(function(){r.unbind()})),n.on(["run.before","swipe.start","update"],(function(){r.stop()})),n.on(["pause","destroy"],(function(){r.disable(),r.stop()})),n.on(["run.after","swipe.end"],(function(){r.start()})),n.on(["play"],(function(){r.enable(),r.start()})),n.on("update",(function(){r.mount()})),n.on("destroy",(function(){i.destroy()})),r},Breakpoints:function(e,t,n){var i=new C,r=e.settings,s=N(r.breakpoints),o=Object.assign({},r),a={match:function(e){if(void 0!==window.matchMedia)for(var t in e)if(e.hasOwnProperty(t)&&window.matchMedia("(max-width: ".concat(t,"px)")).matches)return e[t];return o}};return Object.assign(r,a.match(s)),i.on("resize",window,x((function(){e.settings=_(r,a.match(s))}),e.settings.throttle)),n.on("update",(function(){s=N(s),o=Object.assign({},r)})),n.on("destroy",(function(){i.off("resize",window)})),a}},K=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(n,e);var t=l(n);function n(){return i(this,n),t.apply(this,arguments)}return s(n,[{key:"mount",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return d(o(n.prototype),"mount",this).call(this,Object.assign({},$,e))}}]),n}(S);const J=function(){let e=document.querySelector("#remarkableExperiences");function t(t){if(t.matches){const t='<div class="grid remarkable-experiences-mobile">\n                <div class="grid__item grid__item--1">\n                    <h4 class="heading heading--quaternary">Work</h4>\n                </div>\n                <div class="grid__item grid__item--2">\n                    <h2 class="heading heading--secondary">Remarkable <span class="heading--underline">experiences</span></h2>\n                </div>\n                <div class="grid__item grid__item--3">\n                    <div class="card">\n                        <a class="card__img" href="#">\n                            <img class="ymc-img" src="" alt="">\n                        </a>\n                        <h2 class="heading heading--secondary">YMC</h2>\n                        <p class="text--quaternary">YMC is a software engineering consultancy,\n                            helping digital projects succeed by\n                            fostering a progressive culture of learning\n                            with pure flexibility&#46;&#46;&#46;\n                        </p>\n                        <div class="button__container">\n                            <a class="btn" href="#">\n                                <span>See More</span>\n                                <div class="circle">\n                                    <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/></svg>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div class="grid__item grid__item--4">\n                    <div class="card">\n                        <a class="card__img" href="#">\n                            <img class="atc-img" src="" alt="">\n                        </a>\n                        <h2 class="heading heading--secondary">Attachment Project</h2>\n                        <p class="text--quaternary">Attachment project is online platform focused on healing attachment\n                            disorders with online courses done by world renowned specialists in&#46;&#46;&#46;</p>\n                        <div class="button__container">\n                            <a class="btn" href="#">\n                                <span>See More</span>\n                                <div class="circle">\n                                    <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/></svg>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div class="grid__item grid__item--5">\n                    <div class="card">\n                        <a class="card__img" href="#">\n                            <img class="boringbits-img" src="" alt="">\n                        </a>\n                        <h2 class="heading heading--secondary">Boringbits</h2>\n                        <p class="text--quaternary">Boringbits believe entrepreneurs shouldn\'t\n                            need a background in finance to have better\n                            odds of success, as 1 in 3 business&#46;&#46;&#46;\n                        </p>\n                        <div class="button__container">\n                            <a class="btn" href="#">\n                                <span>See More</span>\n                                <div class="circle">\n                                    <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/></svg>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div class="grid__item grid__item--6">\n                    <a href="work.html" class="button--link">See<br>More</a>\n                </div>\n                </div>';if("home"===document.body.id){e.insertAdjacentHTML("afterbegin",t);const n=document.querySelector(".remarkable-experiences-lg");void 0!==n&&null!=n&&n.remove()}}else{const t='<div class="remarkable-experiences-slider remarkable-experiences-lg">\n                <div class="grid">\n                    <div class="grid__item grid__item--1">\n                        <h4 class="heading heading--quaternary">Work</h4>\n                    </div>\n                    <div class="grid__item grid__item--2">\n                        <h2 class="heading heading--secondary">Remarkable <span class="heading--underline">experiences</span></h2>\n                    </div>\n                    <div class="grid__item grid__item--3">\n                        <div class="glide">\n                            <div class="glide__track" data-glide-el="track">\n                              <ul class="glide__slides">\n                                <li class="glide__slide">\n                                    <span class="glide__slide--type">Strategy UX &amp; UI</span>\n                                    <a class="glide__slide__heading" href="#"><h2>YMC</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="ymc-img" src="" alt="">\n                                    </a>\n                                </li>\n                                <li class="glide__slide">\n                                    <span class="glide__slide--type">Branding Creative direction UX &amp; UI</span>\n                                    <a class="glide__slide__heading" href="#"><h2>Attachment Project</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="atc-img" src="" alt="">\n                                    </a>\n                                </li>\n                                <li class="glide__slide">\n                                    <span class="glide__slide--type">Branding Strategy UX</span>\n                                    <a class="glide__slide__heading" href="#"><h2>Boringbits</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="boringbits-img" src="" alt="">\n                                    </a>\n                                </li>\n                                <li class="glide__slide">\n                                    <span class="glide__slide--type">Branding Graphic Design UI &amp; UX</span>\n                                    <a class="glide__slide__heading" href="#"><h2>Mind Only</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="mo-img" src="" alt="">\n                                    </a>\n                                </li>\n                                <li class="glide__slide"">\n                                    <span class="glide__slide--type">Strategy UX &amp; UI</span>\n                                    <a class="glide__slide__heading" href="#"><h2>Areia Studio Swimmwear</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="ast-img" src="" alt="">\n                                    </a>\n                                </li>\n                                <li class="glide__slide">\n                                    <span class="glide__slide--type">Branding Creative Direction</span>\n                                    <a class="glide__slide__heading" href="#"><h2>Alter Venture Partners</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="avp-img" src="" alt="">\n                                    </a>\n                                </li>\n                                <li class="glide__slide">\n                                    <span class="glide__slide--type">Branding Creative Direction UX &amp; UI</span>\n                                    <a class="glide__slide__heading" href="#"><h2>Briefar</h2></a>\n                                    <a href="#" class="image__container">\n                                        <img class="briefar-img" src="" alt="">\n                                    </a>\n                                </li>\n                              </ul>\n                            </div>\n                            <a class="circle" href="#" id="api-go-prev">\n                                <svg class="arrow arrow--left" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M9.375 233.4l128-128c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L109.3 224H480c17.69 0 32 14.31 32 32s-14.31 32-32 32H109.3l73.38 73.38c12.5 12.5 12.5 32.75 0 45.25c-12.49 12.49-32.74 12.51-45.25 0l-128-128C-3.125 266.1-3.125 245.9 9.375 233.4z"/></svg>\n                            </a>\n                            <a class="circle" href="#" id="api-go-next">\n                                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/></svg>\n                            </a>\n                          </div>\n                    </div>\n                </div>\n            </div>';if("home"===document.body.id){e.insertAdjacentHTML("afterbegin",t);const i=document.querySelector(".remarkable-experiences-mobile");void 0!==i&&null!=i&&i.remove();let r=document.querySelector("#api-go-prev"),s=document.querySelector("#api-go-next");var n=new K(".glide",{type:"carousel",startAt:0,perView:3,gap:35,peek:{before:0,after:0},breakpoints:{1089:{perView:2,gap:25},768:{perView:2,gap:35}}});r.addEventListener("click",(function(e){e.preventDefault(),n.go("<")})),s.addEventListener("click",(function(e){e.preventDefault(),n.go(">")})),n.mount()}}}let n=window.matchMedia("(max-width: 767px)");t(n),n.addListener(t)},Q=e.p+"hero-19292f2e3e5cebea7e194..jpg",Z=e.p+"hero-2ef942ca34598b9e7cb4e..jpg",ee=e.p+"hero-36152e2115076c349c660..jpg",te=e.p+"ymc771c746fde57e506cb7f..jpg",ne=e.p+"attachment-project44be2063d05c99415da6..jpg",ie=e.p+"boringbitsaeb9dd202a691d9f36d6..jpg",re=e.p+"mind-onlyc3122a443f309be9e38d..jpg",se=e.p+"areia-studio-swimwear0581d94c7a03766d06d9..jpg",oe=e.p+"alter-venture-partners365073d8e9c03a104920..jpg",ae=e.p+"briefard54f636f646dc9078ccc..jpg",ce=e.p+"our-processe228778db97287a8a1c1..webp",le=e.p+"decentralized-bannera0c3d7bbe8d5bacbcdf4..jpg",de=e.p+"work-1e0e86db0879c92d7b335..jpg",ue=e.p+"work-2814ef98cad0c029730aa..jpg",fe=e.p+"work-3e9f9e9d16eac612c8a50..jpg",he=e.p+"work-45e2a8c49560e6eb5b04e..jpg",ge=e.p+"what-we-do05c70ea17f3b80633e17..jpg",me=e.p+"pedro6c73259ac0b8e04d5b61..jpg",ve=e.p+"eduardod596c9578550208a01ab..jpg",pe=e.p+"next-genc7f361bcdceb2597b21e..png";const we=function(){const e=document.querySelectorAll(".hero__slide"),t=document.querySelector(".hero__prev"),n=document.querySelector(".hero__next"),i=document.querySelector(".dragg"),r=100/e.length,s=document.querySelectorAll(".lineEl");function o(t){e.forEach(((e,n)=>{e.style.transform=`translateX(${100*(n-t)}%)`}))}o(0);let a=0;const c=e.length;n.addEventListener("click",(function(e){e.preventDefault(),a===c-1?(a=0,i.style.left="0%"):(a++,i.style.left=a*r+"%"),o(a)})),t.addEventListener("click",(function(e){e.preventDefault(),0===a?(a=c-1,i.style.left=(s.length-1)*r+"%"):(a--,i.style.left=a*r+"%",i.style.left-=`${r}%`),o(a)})),s.forEach(((e,t)=>{e.addEventListener("click",(function(){i.style.left=r*t+"%",a=t,o(a)}))}))};const ye=function(){const e=document.querySelector(".preloader"),t=document.querySelector(".hero .grid .grid__item--1"),n=document.querySelector(".hero .grid .grid__item--2"),i=document.querySelector(".hero .grid .grid__item--3"),r=document.querySelector(".hero .grid .grid__item--4"),s=document.querySelector(".hero .grid .grid__item--5");function o([...e],t){setTimeout((()=>{e.forEach((e=>{e.classList.remove("hidden")}))}),t)}let a=document.querySelector(".hero__slide--1"),c=document.querySelector(".hero__slide--2"),l=document.querySelector(".hero__slide--3");const d=document.querySelector(".nav"),u=document.querySelector(".menu"),f=document.querySelector(".close-nav");if(u.addEventListener("click",(()=>{d.classList.add("nav--open")})),f.addEventListener("click",(()=>{d.classList.remove("nav--open")})),"home"===document.body.id){setTimeout((()=>{e.classList.add("preloader--complete")}),4700),o([t,n,s,i,r],4700),we();let _=document.querySelector(".decentralized-studio-img"),b=document.querySelector(".product-idea-img");_.src=le,_.alt="Decentralized Studio",a.src=Q,a.alt="Hero Slide 1",c.src=Z,c.alt="Hero Slide 2",l.src=ee,l.alt="Hero Slide 3",b.src=ce,b.alt="Our Process";let S=window.innerHeight/2,k=window.innerHeight/8,x=document.body,H=document.querySelector(".remarkable-experiences").offsetTop-S,q=document.querySelector(".decentarlized-studio").offsetTop-k;window.addEventListener("scroll",(function(){let e=window.pageYOffset;e>=H&&e<=q?x.classList.add("light-theme"):x.classList.remove("light-theme")}))}if("work"===document.body.id){o([t,n,s,i,r],1e3);let z=document.querySelector(".hero__slide--4");we(),a.src=de,a.alt="Work Slide 1",c.src=ue,c.alt="Work Slide 2",l.src=fe,l.alt="Work Slide 3",z.src=he,z.alt="Work Slide 4";let M=document.querySelectorAll(".featured__work");M.forEach(((e,t)=>{t%2==0?e.classList.add("featured__work--left-img"):e.classList.add("featured__work--right-img")}));const L=document.querySelector("#loadMore"),C=[...M];C.splice(0,3).forEach((e=>{e.style.display="flex"})),L.addEventListener("click",(function(e){e.preventDefault(),C.splice(0,3).forEach((e=>{e.classList.remove("hidden")})),0==C.length&&(L.style.display="none")}));let A=window.innerHeight/2,T=window.innerHeight/2,j=document.querySelector(".featured-works").offsetTop-A,E=document.querySelector(".we-can-help").offsetTop-T;window.addEventListener("scroll",(function(){let e=window.pageYOffset;e>=j&&e<=E?document.body.classList.add("light-theme"):document.body.classList.remove("light-theme")}))}if("studio"===document.body.id){o([document.querySelector(".intro .grid .grid__item--1"),document.querySelector(".intro .grid .grid__item--2"),document.querySelector(".intro .grid .grid__item--3")],1e3);const O=document.querySelector(".what-we-do-img"),B=document.querySelector(".img-team-1"),P=document.querySelector(".img-team-2"),D=document.querySelector(".next-gen-img");O.src=ge,O.alt="What We Do",B.src=me,B.alt="Pedro Gil",P.src=ve,P.alt="Eduardo Martins",D.src=pe,D.alt="Forwwward Studio Next Generation";let R=window.innerHeight/2,V=window.innerHeight/2,W=document.querySelector(".what-we-do").offsetTop-R,F=document.querySelector(".next-generation").offsetTop-V;window.addEventListener("scroll",(function(){let e=window.pageYOffset;e>=W&&e<=F?document.body.classList.add("light-theme"):document.body.classList.remove("light-theme")}))}if("contact"===document.body.id){const I=document.querySelector("#nameLabel"),Y=document.querySelector("#name"),G=document.querySelector("#emailLabel"),U=document.querySelector("#email"),X=document.querySelector("#messageLabel"),N=document.querySelector("#message"),$=document.querySelector("#upload-file"),K=document.querySelector("#check"),J=document.querySelector("#attachText"),ye=document.querySelector("#contactHeading"),_e=document.querySelector(".form"),be=document.querySelector("#contactText"),Se=document.querySelector(".contact__info"),ke=document.querySelector("#submit"),xe=document.querySelectorAll(".error-line"),He=document.querySelectorAll(".error-info");function qe(e,t){e.addEventListener("keyup",(function(){""!==e.value?t.style.display="none":t.style.display="inline-block"}))}o([ye,be,_e,Se],1e3),Y.setAttribute("type","text"),qe(Y,I),qe(U,G),qe(N,X),$.addEventListener("change",(function(){let e=$.files[0].name;J.innerText=e})),ke.addEventListener("click",(e=>{""!==Y.value&&""!==U.value&&""!==N.value&&!1!==K.checked||(e.preventDefault(),xe.forEach((e=>{e.style.width="100%"})),He.forEach((e=>{e.style.opacity=1})))}))}let h=document.querySelectorAll(".ymc-img"),g=document.querySelectorAll(".atc-img"),m=document.querySelectorAll(".boringbits-img"),v=document.querySelectorAll(".mo-img"),p=document.querySelectorAll(".ast-img"),w=document.querySelectorAll(".avp-img"),y=document.querySelectorAll(".briefar-img");h.forEach((e=>{e.src=te,e.alt="Forwwward Studio Project YMC"})),g.forEach((e=>{e.src=ne,e.alt="Forwwward Studio Project Attachment"})),m.forEach((e=>{e.src=ie})),v.forEach((e=>{e.src=re,e.alt="Forwwward Studio Project MindOnly"})),p.forEach((e=>{e.src=se,e.alt="Forwwward Studio Project Arie Studio Swimmwear"})),w.forEach((e=>{e.src=oe,e.alt="Forwwward Studio Project Alter Venture PArtners"})),y.forEach((e=>{e.src=ae,e.alt="Forwwward Studio Project Briefar"}))};const _e=function(){if("studio"===document.body.id){let e,t=document.querySelector(".centered-slider");function n(n){if(n.matches){const e='\n                    <div class="centered-slide glide">\n                        <div class="glide__track" data-glide-el="track">\n                            <ul class="glide__slides">\n                            <li class="glide__slide">\n                                <a href="https://instagram.com" target="_blank" class="centered-slider__item">\n                                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">\n                                    <path\n                                        d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z" />\n                                </svg>\n        \n                                <h2 class="heading heading--centered-slider">Sharing daily inspiration, tips and\n                                    work process.</h2>\n        \n                                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                                </svg>\n                                </a>\n                            </li>\n                            <li class="glide__slide">\n                                <a href="https://dribbble.com" target="_blank" class="centered-slider__item">\n                                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                                    <path\n                                        d="M256 8C119.252 8 8 119.252 8 256s111.252 248 248 248 248-111.252 248-248S392.748 8 256 8zm163.97 114.366c29.503 36.046 47.369 81.957 47.835 131.955-6.984-1.477-77.018-15.682-147.502-6.818-5.752-14.041-11.181-26.393-18.617-41.614 78.321-31.977 113.818-77.482 118.284-83.523zM396.421 97.87c-3.81 5.427-35.697 48.286-111.021 76.519-34.712-63.776-73.185-116.168-79.04-124.008 67.176-16.193 137.966 1.27 190.061 47.489zm-230.48-33.25c5.585 7.659 43.438 60.116 78.537 122.509-99.087 26.313-186.36 25.934-195.834 25.809C62.38 147.205 106.678 92.573 165.941 64.62zM44.17 256.323c0-2.166.043-4.322.108-6.473 9.268.19 111.92 1.513 217.706-30.146 6.064 11.868 11.857 23.915 17.174 35.949-76.599 21.575-146.194 83.527-180.531 142.306C64.794 360.405 44.17 310.73 44.17 256.323zm81.807 167.113c22.127-45.233 82.178-103.622 167.579-132.756 29.74 77.283 42.039 142.053 45.189 160.638-68.112 29.013-150.015 21.053-212.768-27.882zm248.38 8.489c-2.171-12.886-13.446-74.897-41.152-151.033 66.38-10.626 124.7 6.768 131.947 9.055-9.442 58.941-43.273 109.844-90.795 141.978z" />\n                                </svg>\n        \n                                <h2 class="heading heading--centered-slider">You can see some recent work on dribbble.</h2>\n        \n                                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                                </svg>\n                                </a>\n                            </li>\n                            <li class="glide__slide">\n                                <a href="https://behance.net" target="_blank" class="centered-slider__item">\n                                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">\n                                    <path\n                                        d="M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z" />\n                                </svg>\n        \n                                <h2 class="heading heading--centered-slider">Detailed case studies portfolio.</h2>\n        \n                                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                                </svg>\n                                </a>\n                            </li>\n                            <li class="glide__slide">\n                                <a href="https://linkedin.com" target="_blank" class="centered-slider__item">\n                                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">\n                                    <path\n                                        d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z" />\n                                </svg>\n        \n                                <h2 class="heading heading--centered-slider">Sharing knowledge, information and experiences.</h2>\n        \n                                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                                </svg>\n                                </a>        \n                            </li>\n                            </ul>\n                        </div>\n                    </div>\n                ';t.insertAdjacentHTML("beforebegin",e),new K(".glide",{type:"carousel",perView:2,focusAt:"center",gap:35,autoplay:5e3}).mount(),void 0!==document.querySelector(".centered-slider-lg")&&null!=document.querySelector(".centered-slider-lg")&&document.querySelector(".centered-slider-lg").remove()}else{e='\n                <div class="centered-slider centered-slider-lg">\n                <a href="https://instagram.com" target="_blank" class="centered-slider__item">\n                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">\n                    <path\n                        d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z" />\n                </svg>\n    \n                <h2 class="heading heading--centered-slider">Sharing daily inspiration, tips and\n                    work process.</h2>\n    \n                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                </svg>\n            </a>\n            <a href="https://dribbble.com" target="_blank" class="centered-slider__item">\n                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                    <path\n                        d="M256 8C119.252 8 8 119.252 8 256s111.252 248 248 248 248-111.252 248-248S392.748 8 256 8zm163.97 114.366c29.503 36.046 47.369 81.957 47.835 131.955-6.984-1.477-77.018-15.682-147.502-6.818-5.752-14.041-11.181-26.393-18.617-41.614 78.321-31.977 113.818-77.482 118.284-83.523zM396.421 97.87c-3.81 5.427-35.697 48.286-111.021 76.519-34.712-63.776-73.185-116.168-79.04-124.008 67.176-16.193 137.966 1.27 190.061 47.489zm-230.48-33.25c5.585 7.659 43.438 60.116 78.537 122.509-99.087 26.313-186.36 25.934-195.834 25.809C62.38 147.205 106.678 92.573 165.941 64.62zM44.17 256.323c0-2.166.043-4.322.108-6.473 9.268.19 111.92 1.513 217.706-30.146 6.064 11.868 11.857 23.915 17.174 35.949-76.599 21.575-146.194 83.527-180.531 142.306C64.794 360.405 44.17 310.73 44.17 256.323zm81.807 167.113c22.127-45.233 82.178-103.622 167.579-132.756 29.74 77.283 42.039 142.053 45.189 160.638-68.112 29.013-150.015 21.053-212.768-27.882zm248.38 8.489c-2.171-12.886-13.446-74.897-41.152-151.033 66.38-10.626 124.7 6.768 131.947 9.055-9.442 58.941-43.273 109.844-90.795 141.978z" />\n                </svg>\n    \n                <h2 class="heading heading--centered-slider">You can see some recent work on dribbble.</h2>\n    \n                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                </svg>\n            </a>\n            <a href="https://behance.net" target="_blank" class="centered-slider__item">\n                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">\n                    <path\n                        d="M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z" />\n                </svg>\n    \n                <h2 class="heading heading--centered-slider">Detailed case studies portfolio.</h2>\n    \n                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                </svg>\n            </a>\n            <a href="https://linkedin.com" target="_blank" class="centered-slider__item">\n                <svg class="social-media-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">\n                    <path\n                        d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z" />\n                </svg>\n    \n                <h2 class="heading heading--centered-slider">Sharing knowledge, information and experiences.</h2>\n    \n                <svg class="arrow arrow--right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\n                    <path d="M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z"/>\n                </svg>\n            </a>\n                </div>\n            ',t.insertAdjacentHTML("beforeend",e);let n=document.querySelector(".glide");void 0!==n&&null!=n&&n.remove()}}let i=window.matchMedia("(max-width: 767px)");n(i),i.addListener(n)}};const be=function(){function e(e){if(e.matches){const e='\n                    <footer class="footer footer--sm">\n                        <div class="gradient__container">\n                            <div class="gradient gradient-color-1"></div>\n                            <div class="gradient gradient-color-2"></div>\n                            <div class="gradient gradient-color-3"></div>\n                        </div>\n                        <div class="grid">\n                            <div class="grid__item grid__item--1">\n                                <div class="logo">\n                                    <a class="logo--text" href="index.html">Forwwward.</a>\n                                </div>\n                        \n                                <div class="general-inquires">\n                                    <p class="text--secondary">General Inquires</p>\n                                        <a class="email" href="mailto:#">hello@forwwward.studio</a>\n                                    </div>\n                                </div>\n                            <div class="grid__item grid__item--2">\n                                <p class="text--secondary">Location: <span>worldwide</span></p>\n                            </div>\n                            <div class="grid__item grid__item--3">\n                                <p class="text--primary">Forwwward Studio © Copyright</p>\n                            </div>\n                        </div>\n                    </footer>';if("contact"!==document.body.id){document.body.insertAdjacentHTML("beforeend",e);const t=document.querySelector(".footer--lg");void 0!==t&&null!=t&&t.remove()}}else{const e='\n                        <footer class="footer footer--lg">\n                            <div class="gradient__container">\n                                <div class="gradient gradient-color-1"></div>\n                                <div class="gradient gradient-color-2"></div>\n                                <div class="gradient gradient-color-3"></div>\n                            </div>\n                            <div class="grid">\n                                <div class="grid__item grid__item--1">\n                                    <div class="logo">\n                                        <a class="logo--text" href="index.html">Forwwward.</a>\n                                    </div>\n\n                                    <div class="general-inquires">\n                                        <p class="text--secondary">General Inquires</p>\n                                        <a class="email" href="mailto:#">hello@forwwward.studio</a>\n                                    </div>\n                                </div>\n                                <div class="grid__item grid__item--2">\n                                    \n                                </div>\n                                <div class="grid__item grid__item--3">\n                                    <p class="footer--copy">Forwwward Studio © Copyright</p>\n                                </div>\n                                <div class="grid__item grid__item--4">\n                                    <h6 class="heading heading--footer">About</h6>\n                                    <ul>\n                                        <li><a class="footer--link" href="studio.html">About</a></li>\n                                        <li><a class="footer--link" href="index.html#culture">Culture</a></li>\n                                        <li><a class="footer--link" href="contact.html">Contact</a></li>\n                                    </ul>\n                                </div>\n                                <div class="grid__item grid__item--5">\n                                    <h6 class="heading heading--footer">Resources</h6>\n                                    <ul>\n                                        <li><a class="footer--link" href="work.html">Work</a></li>\n                                        <li><a class="footer--link" href="#">Process</a></li>\n                                        <li><a class="footer--link" href="studio.html#whatWeDo">Services</a></li>\n                                    </ul>\n                                </div>\n                                <div class="grid__item grid__item--6">\n                                    <h6 class="heading heading--footer">Follow us</h6>\n                                    <ul>\n                                        <li><a class="footer--link" href="https://www.behance.net/">Behance</a></li>\n                                        <li><a class="footer--link" href="https://dribbble.com/">Dribbble</a></li>\n                                        <li><a class="footer--link" href="https://www.linkedin.com/">Instagram</a></li>\n                                    </ul>\n                                </div>\n                                <div class="grid__item grid__item--7">\n                                    <small class="footer--privacy">Cookie Policy</small>\n                                </div>\n                                <div class="grid__item grid__item--8">\n                                    <small class="footer--privacy">Privacy Policy</small>\n                                </div>\n                                <div class="grid__item grid__item--9">\n                                    <small class="footer--privacy">Location: <span>Worldwide</span></small>\n                                </div>\n                            </div>\n                        </footer>';if("contact"!==document.body.id){document.body.insertAdjacentHTML("beforeend",e);const t=document.querySelector(".footer--sm");void 0!==t&&null!=t&&t.remove()}}}let t=window.matchMedia("(max-width: 767px)");e(t),t.addListener(e)};t(),J(),ye(),_e(),be()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,